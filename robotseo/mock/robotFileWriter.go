// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/ONSdigital/dp-sitemap/config"
	"github.com/ONSdigital/dp-sitemap/robotseo"
	"sync"
)

// Ensure, that RobotFileWriterInterfaceMock does implement robotseo.RobotFileWriterInterface.
// If this is not the case, regenerate this file with moq.
var _ robotseo.RobotFileWriterInterface = &RobotFileWriterInterfaceMock{}

// RobotFileWriterInterfaceMock is a mock implementation of robotseo.RobotFileWriterInterface.
//
// 	func TestSomethingThatUsesRobotFileWriterInterface(t *testing.T) {
//
// 		// make and configure a mocked robotseo.RobotFileWriterInterface
// 		mockedRobotFileWriterInterface := &RobotFileWriterInterfaceMock{
// 			GetRobotsFileBodyFunc: func(lang string, sitemap map[config.Language]string) string {
// 				panic("mock out the GetRobotsFileBody method")
// 			},
// 		}
//
// 		// use mockedRobotFileWriterInterface in code that requires robotseo.RobotFileWriterInterface
// 		// and then make assertions.
//
// 	}
type RobotFileWriterInterfaceMock struct {
	// GetRobotsFileBodyFunc mocks the GetRobotsFileBody method.
	GetRobotsFileBodyFunc func(lang string, sitemap map[config.Language]string) string

	// calls tracks calls to the methods.
	calls struct {
		// GetRobotsFileBody holds details about calls to the GetRobotsFileBody method.
		GetRobotsFileBody []struct {
			// Lang is the lang argument value.
			Lang string
			// Sitemap is the sitemap argument value.
			Sitemap map[config.Language]string
		}
	}
	lockGetRobotsFileBody sync.RWMutex
}

// GetRobotsFileBody calls GetRobotsFileBodyFunc.
func (mock *RobotFileWriterInterfaceMock) GetRobotsFileBody(lang string, sitemap map[config.Language]string) string {
	if mock.GetRobotsFileBodyFunc == nil {
		panic("RobotFileWriterInterfaceMock.GetRobotsFileBodyFunc: method is nil but RobotFileWriterInterface.GetRobotsFileBody was just called")
	}
	callInfo := struct {
		Lang    string
		Sitemap map[config.Language]string
	}{
		Lang:    lang,
		Sitemap: sitemap,
	}
	mock.lockGetRobotsFileBody.Lock()
	mock.calls.GetRobotsFileBody = append(mock.calls.GetRobotsFileBody, callInfo)
	mock.lockGetRobotsFileBody.Unlock()
	return mock.GetRobotsFileBodyFunc(lang, sitemap)
}

// GetRobotsFileBodyCalls gets all the calls that were made to GetRobotsFileBody.
// Check the length with:
//     len(mockedRobotFileWriterInterface.GetRobotsFileBodyCalls())
func (mock *RobotFileWriterInterfaceMock) GetRobotsFileBodyCalls() []struct {
	Lang    string
	Sitemap map[config.Language]string
} {
	var calls []struct {
		Lang    string
		Sitemap map[config.Language]string
	}
	mock.lockGetRobotsFileBody.RLock()
	calls = mock.calls.GetRobotsFileBody
	mock.lockGetRobotsFileBody.RUnlock()
	return calls
}
